#######################################################

set.seed(123)

# 构造模拟数据
time_points <- 0:5
df <- expand.grid(
  time = time_points,
  replicate = 1:3
) |>
  mutate(
    value = 2 * exp(0.3 * time) + rnorm(n(), sd = 0.5)
  )

head(df)


# method 1

library(dplyr)
library(ggplot2)

# 每个时间点取均值
df_mean <- df |>
  group_by(time) |>
  summarise(mean_value = mean(value), .groups = "drop")

# 拟合均值
fit_mean <- nls(mean_value ~ a * exp(b * time),
                data = df_mean,
                start = list(a = 1, b = 0.2))

# 拟合曲线数据
time_grid <- seq(0, 5, length.out = 100)
df_fit_mean <- data.frame(
  time = time_grid,
  fitted = predict(fit_mean, newdata = data.frame(time = time_grid))
)

# 可视化
p1 <- ggplot(df, aes(x = time, y = value)) +
  geom_point(alpha = 0.4) +
  geom_point(data = df_mean, aes(y = mean_value), color = "red", size = 2) +
  geom_line(data = df_fit_mean, aes(y = fitted), color = "blue", linewidth = 1) +
  theme_bw() +
  labs(title = "方法一：用均值拟合", y = "Value")




# method 2

# 拟合所有点
fit_all <- nls(value ~ a * exp(b * time),
               data = df,
               start = list(a = 1, b = 0.2))

# 拟合曲线数据
df_fit_all <- data.frame(
  time = time_grid,
  fitted = predict(fit_all, newdata = data.frame(time = time_grid))
)

# 可视化
p2 <- ggplot(df, aes(x = time, y = value)) +
  geom_point(alpha = 0.4) +
  geom_line(data = df_fit_all, aes(y = fitted), color = "blue", linewidth = 1) +
  theme_bw() +
  labs(title = "方法二：用所有重复点拟合", y = "Value")